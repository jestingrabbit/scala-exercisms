format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
10 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$1.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$2.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$3.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$4.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$5.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$6.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$7.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$8.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$9.class
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest.class
binary dependencies:
2 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> /Users/bill/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> Pangrams$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
10 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$1
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$2
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$3
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$4
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$5
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$6
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$7
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$8
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest$$anonfun$9
used names:
13 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> <init>
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> FunSuite
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> Matchers
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> Pangrams
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> PangramsTest
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> apply
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> be
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> convertToAnyShouldWrapper
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> isPangram
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> org
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> scalatest
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> should
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> test
product stamps:
10 items
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$1.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$2.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$3.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$4.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$5.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$6.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$7.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$8.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest$$anonfun$9.class -> lastModified(1465514763000)
/Users/bill/exercism/scala/pangram/target/scala-2.11/test-classes/PangramsTest.class -> lastModified(1465514763000)
source stamps:
1 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> hash(968b65735b8bb71ea561ad9bc9e11922454d4dc2)
binary stamps:
2 items
/Users/bill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/bill/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
2 items
/Users/bill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Boolean
/Users/bill/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.FunSuite
internal apis:
1 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> 

external apis:
1 items
Pangrams$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDtmlZyAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cC9lAHh0AAZub3RpZnlzcQB+AAxOZqLHdAAEd2FpdHNxAH4ADGpAKSR0AAhQYW5ncmFtc3NxAH4ADMN/Fv10AA0kYXNJbnN0YW5jZU9mc3EAfgAMiuLW6nQABmVxdWFsc3NxAH4ADNzi7Y50AAxhc0luc3RhbmNlT2ZzcQB+AAwBnOMadAAMc3luY2hyb25pemVkc3EAfgAMZZ361nQADSRpc0luc3RhbmNlT2ZzcQB+AAx/lkTzdAAJbm90aWZ5QWxsc3EAfgAMsVGiwHQADGlzSW5zdGFuY2VPZnNxAH4ADHtiT5B0AA9udW1iZXJPZkxldHRlcnNzcQB+AAyG3MT0dAAJaXNQYW5ncmFtc3EAfgAM5gON8HQAAj09c3EAfgAMDEU3qXQABWNsb25lc3EAfgAM4CpxOHQACHRvU3RyaW5nc3EAfgAMEEBcWXQAAiE9c3EAfgAMlmOCfnQACGdldENsYXNzc3EAfgAMYPw7I3QAAm5lc3EAfgAM5HpOf3QAAmVxc3EAfgAMb9yzanQAAiMjc3EAfgAMYeT7lnQACGZpbmFsaXplc3EAfgAMtrlM3XQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgATdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBac3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AX3NxAH4AWnVxAH4APgAAAABzcQB+AFp1cQB+AD4AAAAAc3EAfgBadXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBedAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBec3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB3dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB4c3EAfgBrdAADQW55c3EAfgBvc3EAfgBydXEAfgB1AAAAAnNxAH4Ad3QABXNjYWxhcQB+AH51cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVTd8j0l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA8L1VzZXJzL2JpbGwvZXhlcmNpc20vc2NhbGEvcGFuZ3JhbS90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUIqBw39rmnHcaeZKrpzwDVcNHL0g=
source infos:
1 items
/Users/bill/exercism/scala/pangram/src/test/scala/PangramsTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVTd8mxp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQS9Vc2Vycy9iaWxsL2V4ZXJjaXNtL3NjYWxhL3BhbmdyYW0vdGFyZ2V0L3NjYWxhLTIuMTEvdGVzdC1jbGFzc2VzdAABLw==
